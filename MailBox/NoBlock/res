==1267== Helgrind, a thread error detector
==1267== Copyright (C) 2007-2013, and GNU GPL'd, by OpenWorks LLP et al.
==1267== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==1267== Command: ./test.o
==1267== Parent PID: 1266
==1267== 
==1267== ---Thread-Announcement------------------------------------------
==1267== 
==1267== Thread #2 was created
==1267==    at 0x59625EE: clone (clone.S:74)
==1267==    by 0x4E422B9: do_clone.constprop.3 (createthread.c:75)
==1267==    by 0x4E43762: create_thread (createthread.c:245)
==1267==    by 0x4E43762: pthread_create@@GLIBC_2.2.5 (pthread_create.c:606)
==1267==    by 0x4C2EEBD: pthread_create_WRK (hg_intercepts.c:270)
==1267==    by 0x406352: createPthread(void* (*)(void*)) (Semaphore.cpp:35)
==1267==    by 0x402EB7: MailBox::loop() (MailBox.cpp:58)
==1267==    by 0x4019C1: main (test.cpp:35)
==1267== 
==1267== ---Thread-Announcement------------------------------------------
==1267== 
==1267== Thread #3 was created
==1267==    at 0x59625EE: clone (clone.S:74)
==1267==    by 0x4E422B9: do_clone.constprop.3 (createthread.c:75)
==1267==    by 0x4E43762: create_thread (createthread.c:245)
==1267==    by 0x4E43762: pthread_create@@GLIBC_2.2.5 (pthread_create.c:606)
==1267==    by 0x4C2EEBD: pthread_create_WRK (hg_intercepts.c:270)
==1267==    by 0x510EA90: std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==1267==    by 0x4035C8: std::thread::thread<std::function<void* (void*)>&, void*>(std::function<void* (void*)>&, void*&&) (thread:138)
==1267==    by 0x402D79: MailBox::loopHelper(void*) (MailBox.cpp:36)
==1267==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==1267==    by 0x4E430A3: start_thread (pthread_create.c:309)
==1267==    by 0x596262C: clone (clone.S:111)
==1267== 
==1267== ----------------------------------------------------------------
==1267== 
==1267== Possible data race during write of size 8 at 0x6824E68 by thread #2
==1267== Locks held: none
==1267==    at 0x511827F: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==1267==    by 0x4032F2: Message::Message(Message const&) (MailBox.h:19)
==1267==    by 0x402C60: MailBox::loopHelper(void*) (MailBox.cpp:20)
==1267==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==1267==    by 0x4E430A3: start_thread (pthread_create.c:309)
==1267==    by 0x596262C: clone (clone.S:111)
==1267== 
==1267== This conflicts with a previous read of size 8 by thread #3
==1267== Locks held: none
==1267==    at 0x50EDF10: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <char, std::char_traits<char>, std::allocator<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==1267==    by 0x401EF3: Test::handleMessage(void*) (test.cpp:17)
==1267==    by 0x402AF1: void* std::_Mem_fn<void* (Test::*)(void*)>::operator()<void*, void>(Test*, void*&&) const (in /home/demons/Documents/TerminalGameEngine/MailBox/NoBlock/test.o)
==1267==    by 0x4029E0: _ZNSt5_BindIFSt7_Mem_fnIM4TestFPvS2_EEPS1_St12_PlaceholderILi1EEEE6__callIS2_IOS2_EILm0ELm1EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE (functional:1264)
==1267==    by 0x402718: void* std::_Bind<std::_Mem_fn<void* (Test::*)(void*)> (Test*, std::_Placeholder<1>)>::operator()<void*, void*>(void*&&) (functional:1323)
==1267==    by 0x402547: std::_Function_handler<void* (void*), std::_Bind<std::_Mem_fn<void* (Test::*)(void*)> (Test*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, void*) (functional:2025)
==1267==    by 0x406166: std::function<void* (void*)>::operator()(void*) const (functional:2439)
==1267==    by 0x4060D2: void* std::_Bind_simple<std::function<void* (void*)> (void*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (functional:1700)
==1267==  Address 0x6824e68 is on thread #2's stack
==1267==  in frame #2, created by MailBox::loopHelper(void*) (MailBox.cpp:15)
==1267== 
==1267== 
==1267== For counts of detected and suppressed errors, rerun with: -v
==1267== Use --history-level=approx or =none to gain increased speed, at
==1267== the cost of reduced accuracy of conflicting-access information
==1267== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 95 from 76)
